{
    "swagger": "2.0",
    "info": {
        "description": "This is a simple REST server allowing users to log in, create new users, discover new users and swipe on them with your preference.",
        "title": "dating-api",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/login": {
            "post": {
                "description": "Logs in a user with the provided credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "Login User Request Body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usecases.LoginUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/usecases.LoginUserResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Generates a new user record based on fake data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/usecases.CreateUserResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/discover": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gets a filterable list of new users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Discover new users",
                "parameters": [
                    {
                        "description": "Discover Potential Matches Request Body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usecases.DiscoverPotentialMatchesRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/usecases.DiscoverPotentialMatchesResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/swipe": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Provides a swipe result on a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Swipe on a user",
                "parameters": [
                    {
                        "description": "Swipe User Request Body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usecases.SwipeUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/usecases.SwipeUserResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "usecases.CreateUserResponseBody": {
            "description": "Response body for the newly created user",
            "type": "object",
            "properties": {
                "age": {
                    "description": "Age the generated age for the user",
                    "type": "integer"
                },
                "email": {
                    "description": "Email the generated email for the user",
                    "type": "string"
                },
                "gender": {
                    "description": "Gender the generated gender for the user",
                    "type": "string"
                },
                "id": {
                    "description": "ID the generated id for the user",
                    "type": "string"
                },
                "location": {
                    "description": "Location the generated location for the user",
                    "allOf": [
                        {
                            "$ref": "#/definitions/usecases.Location"
                        }
                    ]
                },
                "name": {
                    "description": "Name the generated name for the user",
                    "type": "string"
                },
                "password": {
                    "description": "Password the generated password for the user",
                    "type": "string"
                }
            }
        },
        "usecases.DiscoverPotentialMatchesRequestBody": {
            "description": "the request body for the discover endpoint",
            "type": "object",
            "properties": {
                "pageInfo": {
                    "description": "PageInfo represents the filter information for the request",
                    "allOf": [
                        {
                            "$ref": "#/definitions/usecases.PageInfo"
                        }
                    ]
                }
            }
        },
        "usecases.DiscoverPotentialMatchesResponseBody": {
            "description": "the response body for the discover endpoint",
            "type": "object",
            "properties": {
                "users": {
                    "description": "Users is the returned list of all users matching the filter criteria",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/usecases.UserResponseBody"
                    }
                }
            }
        },
        "usecases.Location": {
            "type": "object",
            "properties": {
                "latitude": {
                    "description": "Latitude the generated latitude for the users location",
                    "type": "number"
                },
                "longitude": {
                    "description": "Longitude the generated longitude for the users location",
                    "type": "number"
                }
            }
        },
        "usecases.LoginUserRequestBody": {
            "description": "the login information for the user",
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "Email represents the email of the user to log in as",
                    "type": "string"
                },
                "password": {
                    "description": "Password represents the password of the user to log in as",
                    "type": "string"
                }
            }
        },
        "usecases.LoginUserResponseBody": {
            "description": "the newly issued JWT for the logged in user",
            "type": "object",
            "properties": {
                "token": {
                    "description": "Token represents the JWT issued for the logged in user",
                    "type": "string"
                }
            }
        },
        "usecases.PageInfo": {
            "description": "the filter information for the request",
            "type": "object",
            "properties": {
                "maxAge": {
                    "description": "MaxAge is the maximum age of any users returned in the list",
                    "type": "integer"
                },
                "minAge": {
                    "description": "MinAge is the minimum age of any users returned in the list",
                    "type": "integer"
                },
                "preferredGenders": {
                    "description": "PreferredGenders is an array of genders to include in the list",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "usecases.Result": {
            "description": "the information of the swipe result",
            "type": "object",
            "properties": {
                "matchId": {
                    "description": "MatchID the id of the match if the swipe resulted in one",
                    "type": "string"
                },
                "matched": {
                    "description": "Matched whether the swipe resulted in a match",
                    "type": "boolean"
                }
            }
        },
        "usecases.SwipeUserRequestBody": {
            "description": "the swipe result on a user",
            "type": "object",
            "required": [
                "preference",
                "userId"
            ],
            "properties": {
                "preference": {
                    "description": "Preference the preference for the user",
                    "type": "string",
                    "enum": [
                        "YES",
                        "yes",
                        "NO",
                        "no"
                    ]
                },
                "userId": {
                    "description": "UserID the id of the user that is swiped on",
                    "type": "string"
                }
            }
        },
        "usecases.SwipeUserResponseBody": {
            "description": "the result of the swipe, if theres a match it returns the matchID",
            "type": "object",
            "properties": {
                "results": {
                    "description": "Results the result of the swipe",
                    "allOf": [
                        {
                            "$ref": "#/definitions/usecases.Result"
                        }
                    ]
                }
            }
        },
        "usecases.UserResponseBody": {
            "description": "a user matching the filter criteria",
            "type": "object",
            "properties": {
                "age": {
                    "description": "Age is the age of the user",
                    "type": "integer"
                },
                "distanceFromMe": {
                    "description": "DistanceFromMe is the distance between the users measured in miles",
                    "type": "number"
                },
                "gender": {
                    "description": "Gender is the gender of the user",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the id of the user",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the name of the user",
                    "type": "string"
                }
            }
        }
    }
}